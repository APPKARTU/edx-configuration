---
# Here are the few steps that I have performed to get the `debconf` setting information:
#
# - downloaded the mysql-apt-repo from the mysql official site(named: mysql-apt-config_0.6.0-1_all.deb)
# - Find the `debconf` setting information after installing this `deb` package
#
# # debconf-show mysql-apt-config
# * mysql-apt-config/select-server: mysql-5.6
#   mysql-apt-config/unsupported-platform: abort
#   mysql-apt-config/repo-codename: precise
# * mysql-apt-config/select-product: Apply
#   mysql-apt-config/select-tools:
#   mysql-apt-config/repo-distro: ubuntu
#
# - Even to get more information about the `debconf` options of the package:
#
# # debconf-get-selections|grep mysql-apt-config
# mysql-apt-config  mysql-apt-config/select-server  select  mysql-5.6
# mysql-apt-config  mysql-apt-config/unsupported-platform select  abort
# mysql-apt-config  mysql-apt-config/repo-codename  select  precise
# mysql-apt-config  mysql-apt-config/select-product select  Apply
# mysql-apt-config  mysql-apt-config/select-tools select
# mysql-apt-config  mysql-apt-config/repo-distro  select  ubuntu
#
# - After the installation, I have checked the `/etc/apt/sources.list.d` directory and found one file `mysql.list`
# with following contents:
#
# deb http://repo.mysql.com/apt/ubuntu/ precise mysql-apt-config
# deb http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6
# deb-src http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6
#
#
# Thought that instead of performing all those steps and get the repo, why not directly use this repo
# `deb http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6`, I just picked this line and directly used it and it worked for us.

- set_fact:
    mysql_server_fqdn: "{{ EDXAPP_MYSQL_HOST }}"
    mysql_ssl_ca: "{{ EDXAPP_MYSQL_HOST_SSL_CA }}"
    mysql_cloud_db: "{{ EDXAPP_MYSQL_CLOUD_DB }}"

- name: Add MySQL community apt key
  apt_key:
    id: 8C718D3B5072E1F5
    keyserver: "{{ COMMON_EDX_PPA_KEY_SERVER }}"
    state: present
  when: ansible_distribution_release == 'precise' and not mysql_cloud_db

# Despite ondrej's ppa having 12.04 support, we would need to do shenanigans and uninstalling
# to switch back cleanly without publishing a new base devstack box.  Easier to just clean this
# up with Ficus.
- name: Install MySQL from their community PPA
  apt_repository:
    repo: "deb http://repo.mysql.com/apt/ubuntu/ precise mysql-5.6"
    update_cache: yes
  when: ansible_distribution_release == 'precise' and not mysql_cloud_db

- name: Install mysql-5.6 and dependencies
  apt:
    name: "{{ item }}"
    install_recommends: yes
    state: present
  with_items: "{{ mysql_debian_pkgs }}"
  when: not mysql_cloud_db

- name: Start mysql
  service:
    name: mysql
    state: started
  when: not mysql_cloud_db

- name: Update mysql root password
  sudo: yes
  mysql_user:
    # try default auth (root and no password)
    check_implicit_admin: yes
    # try intended auth
    login_user: "root"
    login_password: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN | default('') }}"
    login_host: "{{ mysql_server_fqdn }}"
    # sets password and access
    name: "root"
    password: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN | default('') }}"
    priv: "*.*:ALL,GRANT"
    ssl_ca: "{{ mysql_ssl_ca }}"
  when: not mysql_cloud_db

- name: Add/Update EDXAPP_MYSQL_USER_ADMIN user "{{ EDXAPP_MYSQL_USER_ADMIN | default('root') }}"
  sudo: yes
  mysql_user:
    # try root auth
    login_user: "root"
    login_password: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN | default('') }}@{{ EDXAPP_MYSQL_CLOUD_SERVER_NAME }}"
    login_host: "{{ mysql_server_fqdn }}"
    # sets password and access
    name: "{{ EDXAPP_MYSQL_USER_ADMIN | default('root') }}"
    password: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN | default('') }}"
    priv: "*.*:ALL,GRANT"
    ssl_ca: "{{ mysql_ssl_ca }}"
  when: not mysql_cloud_db

- name: Ensure Anonymous user(s) does not exist
  mysql_user:
    name: ''
    host_all: yes
    login_user: "{{ EDXAPP_MYSQL_USER_ADMIN | default('root') }}@{{ EDXAPP_MYSQL_CLOUD_SERVER_NAME }}"
    login_password: "{{ EDXAPP_MYSQL_PASSWORD_ADMIN | default('') }}"
    login_host: "{{ mysql_server_fqdn }}"
    state: absent
    ssl_ca: "{{ mysql_ssl_ca }}"
